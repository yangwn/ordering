<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd">
	
	<description>apache shiro 配置</description>
	
    <!-- 自定义shiro的realm数据库身份验证 -->
	<bean id="jdbcAuthenticationRealm" class="com.github.bean.showcase.service.account.JdbcAuthenticationRealm">
		<property name="name" value="jdbcAuthentication" />
		<property name="credentialsMatcher">
			<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
				<property name="hashAlgorithmName" value="MD5" />
			</bean>
		</property>
		<!-- 当授权执行时，默认添加给用户的Permission。如果存在多个,用逗号","分割 -->
		<property name="defaultPermissionString" value="security:change-password,security:index" />
		<!-- 授权缓存名称 -->
    	<property name="authorizationCacheName" value="shiroAuthorizationCache" />
    	<!-- 启用认证缓存，当用户登录一次后将不在查询数据库来获取用户信息，直接在从缓存获取 -->
    	<property name="authenticationCachingEnabled" value="true" />
    	<!-- 认证缓存名称 -->
    	<property name="authenticationCacheName" value="shiroAuthenticationCache" />
	</bean>
	
	<!-- shiro 的缓存管理,使用spring的ehCacheManagerFactory,
		  操作spring缓存工厂来及时更新shiro的缓存管理
		 ehCacheManagerFactory对象在applicationContext-core.xml中配置 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager"> 
        <property name="cacheManager" ref="ehCacheManagerFactory" />
    </bean>
    
    <!-- 使用EnterpriseCacheSessionDAO，将session放入到缓存，通过同步配置，将缓存同步到其他集群点上，解决session同步问题。 -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
    	<!-- 活动session缓存名称 -->
    	<property name="activeSessionsCacheName" value="shiroActiveSessionCache" />
    </bean>
    
   <!-- 考虑到集群，使用DefaultWebSessionManager来做sessionManager -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
    	<!-- 使用EnterpriseCacheSessionDAO，解决session同步问题 -->
    	<property name="sessionDAO" ref="sessionDAO" />
    </bean>
    
    <!-- 使用默认的WebSecurityManager -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- realm认证和授权,从数据库读取资源 -->
		<property name="realm" ref="jdbcAuthenticationRealm" />
		<!-- cacheManager,集合spring缓存工厂 -->
		<property name="cacheManager" ref="cacheManager" />
		<!-- 考虑到集群，使用DefaultWebSessionManager来做sessionManager -->
		<property name="sessionManager" ref="sessionManager" />
	</bean>
	
	<!-- 自定义对 shiro的连接约束,结合shiroSecurityFilter实现动态获取资源 -->
	<bean id="chainDefinitionSectionMetaSource" class="com.github.bean.showcase.service.account.ChainDefinitionSectionMetaSource">
		<!-- 默认的连接配置 -->
		<property name="filterChainDefinitions">
			<value>
				/login = captchaAuthc
				/logout = logout
				/index = perms[security:index]
				/changePassword = perms[security:change-password]
			</value>
		</property>
	</bean>
	
	<!-- 将shiro与spring集合 -->
	<bean id="shiroSecurityFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="filters">
			<map>
				<entry key="captchaAuthc" value-ref="captchaAuthenticationFilter" />
			</map>
		</property>
		<!-- shiro的核心安全接口 -->
    	<property name="securityManager" ref="securityManager" />
    	<!-- 要求登录时的链接 该连接是com.github.dactiv.showcase.web.SystemCommonController.login()方法-->
	    <property name="loginUrl" value="/login" />
	    <!-- 登陆成功后要跳转的连接，该连接是com.github.dactiv.showcase.web.SystemCommonController.index()方法 -->
	    <property name="successUrl" value="/index" />
	    <!-- 没有权限要跳转的链接 该连接是com.github.dactiv.showcase.web.SystemCommonController.unauthorized()方法 -->
	    <property name="unauthorizedUrl" value="/unauthorized" />
	    <!-- shiro连接约束配置,在这里使用自定义的动态获取资源类 -->
	    <property name="filterChainDefinitionMap" ref="chainDefinitionSectionMetaSource" />
	</bean>
	
</beans>