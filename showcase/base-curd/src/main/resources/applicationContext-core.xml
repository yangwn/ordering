<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:cache="http://www.springframework.org/schema/cache" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd 
	http://www.springframework.org/schema/jdbc 
	http://www.springframework.org/schema/jdbc/spring-jdbc.xsd 
	http://www.springframework.org/schema/cache 
	http://www.springframework.org/schema/cache/spring-cache.xsd ">

	<description>Spring公共配置 </description>
	
	<!-- 定义aop Aspect自动代理 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="com.github.bean.showcase">
		<context:include-filter type="annotation" expression="org.aspectj.lang.annotation.Aspect" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<!-- Hibernate配置 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.github.bean.showcase.entity" />
	</bean>

	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
	<!-- spring对ehcache的缓存工厂支持 -->
	<bean id="ehCacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml" />
		<property name="acceptExisting" value="true" />
	</bean>
	
	<!-- spring对ehcache的缓存管理 -->
	<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehCacheManagerFactory"></property>
	</bean>
	
	<!-- 使用缓存annotation 配置 -->
	<cache:annotation-driven cache-manager="ehCacheManager" proxy-target-class="true" />
	
	<!-- 启动spring上下文持有者，帮组在某些方法直接获取spring bean 对象-->
	<bean class="com.github.dactiv.common.spring.SpringContextHolder"></bean>
	
	<!-- 开发环境使用的dataSource和配置文件 -->
	<beans profile="dev">
	
		<!-- 定义受环境影响易变的变量 -->
		<context:property-placeholder ignore-resource-not-found="true" location="classpath*:/application.properties" />
		
		<!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
			<!-- 链接信息 -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
	
			<!-- 连接池信息 -->
			<property name="initialSize" value="${jdbc.initial_size}" />
			<property name="maxActive" value="${jdbc.max_active}" />
			<property name="maxIdle" value="${jdbc.max_idle}" />
			<property name="minIdle" value="${jdbc.min_idle}" />
			<property name="defaultAutoCommit" value="false" />
			<property name="timeBetweenEvictionRunsMillis" value="3600000" />
			<property name="minEvictableIdleTimeMillis" value="3600000" />
		</bean>
	
	</beans>
	
	<!-- 测试环境使用的dataSource和配置文件 -->
	<beans profile="test">
	
		<!-- 定义受环境影响易变的变量 -->
		<context:property-placeholder ignore-resource-not-found="true" location="classpath*:/application.test.properties" />
		
		<!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="defaultAutoCommit" value="false" />
		</bean>
		
		<!-- 运行测试环境时创建表都h2数据库 -->
		<!--<jdbc:initialize-database data-source="dataSource" ignore-failures="ALL">
				<jdbc:script location="classpath:data/h2/create-table.sql" />
			</jdbc:initialize-database> -->
		
	</beans>
</beans>